<?php

// –°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ Telegram –±–æ—Ç–∞
$botToken = getenv('TELEGRAM_BOT_TOKEN') ?: '8474557312:AAEe9c4vNqa3KhZj0BSCxQhTKiFrbsirdmk';

echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ Telegram –±–æ—Ç–∞...\n";
echo "–¢–æ–∫–µ–Ω: {$botToken}\n\n";

// –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
$commands = [
    ['command' => 'start', 'description' => 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ']
];

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ–º–∞–Ω–¥
$url = "https://api.telegram.org/bot{$botToken}/setMyCommands";
$data = [
    'commands' => json_encode($commands)
];

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/x-www-form-urlencoded'
]);

$result = curl_exec($ch);
$httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

if ($result !== false && $httpCode == 200) {
    $response = json_decode($result, true);
    if ($response['ok']) {
        echo "‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!\n\n";
        echo "üìã –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n";
        foreach ($commands as $command) {
            echo "  /{$command['command']} - {$command['description']}\n";
        }
    } else {
        echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥: " . $response['description'] . "\n";
    }
} else {
    echo "‚ùå –û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞ (–∫–æ–¥: {$httpCode})\n";
    echo "–û—Ç–≤–µ—Ç: " . $result . "\n";
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
echo "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥...\n";
$url = "https://api.telegram.org/bot{$botToken}/getMyCommands";
$response = file_get_contents($url);

if ($response !== false) {
    $data = json_decode($response, true);
    if ($data['ok']) {
        if (empty($data['result'])) {
            echo "‚ö†Ô∏è –ö–æ–º–∞–Ω–¥—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã\n";
        } else {
            echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥: " . count($data['result']) . "\n";
            foreach ($data['result'] as $command) {
                echo "  /{$command['command']} - {$command['description']}\n";
            }
        }
    } else {
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥: " . $data['description'] . "\n";
    }
} else {
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã\n";
}

echo "\nüéâ –ì–æ—Ç–æ–≤–æ!\n";

